// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`assign_to_undefined.ts 1`] = `
"foo:
  .name	"foo"
  .pname	p1, "u"
  .pname	p2, "v"
  set_reg	nil, p1
  set_reg	nil, p2
  .ret	"
`;

exports[`blueprint_in_behavior.ts 1`] = `
"foo:
  .name	"foo"
  produce	$bp=:bpBot
  .ret	


bpBot:
  .blueprint	f_bot_1m_a
  .name	"Example Bot 1"
  .disconnected	
  .reg	2, c_power_transmitter"
`;

exports[`blueprint_with_behavior.ts 1`] = `
"bpBuilding1:
  .blueprint	f_building2x1a
  .name	"Bot Factory"
  .component	1, c_robotics_factory
  .component	2, c_robotics_factory
  .component	3, c_internal_storage
  .component	4, c_internal_storage
  .component	5, c_internal_storage
  .component	6, c_behavior, :fnBotFactory
  .link	13, 5
  .link	3, 6
  .link	15, 8
  .link	3, 9
  .link	7, 11
  .link	10, 11
  .link	5, 12
  .link	8, 14


fnBotFactory:
  .sub	
  .name	"fnBotFactory"
  .pname	p1, "targetLocation"
  .pname	p2, "craft1"
  .pname	p3, "active1"
  .pname	p4, "craft2"
  .pname	p5, "active2"
  produce	$bp=:bpBot1
l0:
  compare_item	:l1, p3
  jump	:l3
l1:
l2:
  jump	:l0
l3:
  produce	$bp=:bpBot2
l4:
  compare_item	:l5, p3
  jump	:l7
l5:
l6:
  jump	:l4
l7:
  set_reg	f_bot_1m_a@1, p4
l8:
  compare_item	:l9, p5
  jump	:l11
l9:
l10:
  jump	:l8
l11:
  .ret	


fnBot1:
  .sub	
  .name	"fnBot1"
  .pname	p1, "p1"
  .pname	p2, "p2"
  .pname	p3, "p3"
  .pname	p4, "p4"
  notify	$txt="Hello World"
  .ret	


bpBot1:
  .blueprint	f_bot_1m_a
  .name	"Example Bot 1"
  .logistics	"channel_1", false
  .logistics	"channel_2", true
  .logistics	"channel_3", false
  .logistics	"channel_4", true
  .component	1, c_power_transmitter
  .component	3, c_behavior, :fnBot1
  .reg	2, c_power_transmitter
  .reg	5, metalore@1
  .reg	6, metalore@2
  .reg	7, metalore
  .reg	8, 3
  .link	1, 7


bpBot2:
  .blueprint	f_bot_1m_c
  .name	"Example Bot 2"
  .disconnected	
  .logistics	"transport_route", true
  .logistics	"carrier", false
  .logistics	"can_construction", false
  .component	1, c_medium_storage
  .component	2, c_modulespeed
  .component	3, c_behavior
  .lock	0, metalore
  .lock	1, metalbar
  .lock	2, true
  .lock	3, false
  .lock	5, true
  .lock	6, metalore"
`;

exports[`call_with_computation.ts 1`] = `
"foo:
  .name	"foo"
  .pname	p1, "v"
  sub	p1, 1, A
  set_number	p1, A, nil
  .ret	"
`;

exports[`if_unit_type.ts 1`] = `
"test:
  .name	"test"
  .pname	p1, "a"
  unit_type	p1, :l2, :l1, :l3
  jump	:l3
l1:
  notify	$txt="Bot"
  jump	:l0
l2:
  notify	$txt="Building"
  jump	:l0
l3:
  notify	$txt="Other"
  jump	:l0
l0:
  .ret	"
`;

exports[`inlining.ts 1`] = `
"foo:
  .name	"foo"
  .pname	p1, "p1"
  set_reg	77, A
  add	896, A, B
  set_reg	8, nil
  set_reg	-1, p1
  notify	9
  notify	891
  notify	A
  notify	144
  mul	B, 5, D
  notify	D
  set_reg	9, C
  check_health	:l1, p1
  jump	:l2
l1:
  set_reg	10, C
  jump	:l0
l2:
  set_reg	11, C
  jump	:l0
l0:
  notify	C
  mul	-15 -10, 3, E
  domove	E
  domove	-15 -10
  .ret	"
`;

exports[`literals.ts 1`] = `
"foo:
  .name	"foo"
  .pname	p1, "v"
  set_reg	5, A
  check_battery	:label0, A
label0:
  set_reg	nil, p1
  check_battery	:label1, p1
label1:
  set_reg	1, p1
  check_battery	:label2, p1
label2:
  set_reg	c_battery, p1
  check_battery	:label3, p1
label3:
  set_reg	c_small_relay@2, p1
  check_battery	:label4, p1
label4:
  set_reg	10 20, p1
  check_battery	:label5, p1
label5:
  set_number	p1, 30, p1
  count_item	c_battery, p1
  count_item	c_battery, p1
  count_item	p1, p1
  sub	p1, 1, p1
  add	p1, 1, p1
  set_reg	c_battery, nil
  set_reg	10, B
  add	B, 1, nil
  .ret	"
`;

exports[`loops.ts 1`] = `
"loops:
  .name	"loops"
  for_signal_match	metalore, C, D, :l1
  jump	:l0
l0:
  notify	C
  notify	D
  .ret	
l1:
  for_signal_match	metalore, A, B, :l3
  jump	:l2
l2:
  set_reg	1, C
  notify	C
  last	
  .ret	
l3:
  notify	A
  notify	B
  .ret	"
`;

exports[`multi_file.ts 1`] = `
"foo:
  .name	"foo"
  .pname	p1, "rngState"
  call	100, 1, p1, $sub=:rng
  .ret	


rng:
  .sub	
  .name	"rng"
  .pname	p1, "max"
  .pname	p2, "min"
  .pname	p3, "state"
  unlock	
  sub	p1, p2, B
  add	B, 1, A
  check_number	:l0, :l1, p3, 0
  jump	:l1
l1:
  faction_item_amount	metalore, p3, :label0
label0:
  jump	:l0
l0:
  mul	17364, p3, C
  add	C, 1, D
  modulo	D, 65521, p3
  .pname	p4
  .out	p4
  mul	A, p3, E
  div	E, 65521, F
  add	F, p2, p4
  .ret	
  .ret	"
`;

exports[`nested_sub.ts 1`] = `
"foo:
  .name	"foo"
  call	$sub=:sub1
  .ret	


sub1:
  .sub	
  .name	"sub1"
  call	$sub=:sub2
  .ret	


sub2:
  .sub	
  .name	"sub2"
  notify	$txt="hello world"
  .ret	"
`;

exports[`numeric_compare.ts 1`] = `
"foo:
  .name	"foo"
  .pname	p1, "v"
  get_battery	A
  check_number	:l0, :l1, A, 20
  jump	:l0
l1:
  gethome	D
  domove	D
  .ret	
  jump	:l0
l0:
  get_self	C
  get_health	C, B
  check_number	:l4, :l3, B, 50
  jump	:l3
l3:
  gethome	D
  domove	D
  jump	:l2
l4:
  notify	$txt="ok"
  jump	:l2
l2:
  .ret	"
`;

exports[`rng.ts 1`] = `
"rng:
  .name	"rng"
  .pname	p1, "max"
  .pname	p2, "min"
  .pname	p3, "state"
  unlock	
  sub	p1, p2, B
  add	B, 1, A
  check_number	:l0, :l1, p3, 0
  jump	:l1
l1:
  faction_item_amount	metalore, p3, :label0
label0:
  jump	:l0
l0:
  mul	17364, p3, C
  add	C, 1, D
  modulo	D, 65521, p3
  .pname	p4
  .out	p4
  mul	A, p3, E
  div	E, 65521, F
  add	F, p2, p4
  .ret	
  .ret	"
`;

exports[`switch_no_default.ts 1`] = `
"foo:
  .name	"foo"
  .pname	p1, "v"
  value_type	p1, :l0, :l0, :l0, :l0, :l0, :l0
  jump	:l1
l1:
  notify	$txt="No Match"
  jump	:l0
l0:
  .ret	"
`;

exports[`test1.ts 1`] = `
"foo:
  .name	"foo"
  .pname	p1, "v"
  check_battery	:l1
  jump	:l0
l1:
  .ret	
  jump	:l0
l0:
  solve	p1, A, :l3
  jump	:l4
l3:
  notify	$txt="no solution"
  jump	:l2
l4:
  notify	$txt="solved"
  jump	:l2
l2:
  value_type	A, :l6, :l7, :l8, :l9, :l9, :l9
  jump	:l9
l6:
  set_reg	1, nil
  jump	:l5
l7:
  set_reg	2, nil
  jump	:l5
l8:
  set_reg	3, nil
  jump	:l5
l9:
  set_reg	4, nil
l5:
  for_entities_in_range	20, v_construction, nil, nil, B, :l11
  jump	:l10
l10:
  get_distance	B, nil
  .ret	
l11:
  .ret	"
`;

exports[`test2.ts 1`] = `
"foo:
  .name	"foo"
  .pname	p1, "p1"
  .ret	"
`;

exports[`this_arg_param.ts 1`] = `
"test:
  .name	"test"
  .pname	p1, "a"
  select_nearest	:l1, :l2, p1, signal
l1:
  notify	$txt="a"
  jump	:l0
l2:
  notify	$txt="b"
  jump	:l0
l0:
  .ret	"
`;

exports[`variable_blocks.ts 1`] = `
"foo:
  .name	"foo"
  .pname	p1, "p"
  set_reg	1, nil
  set_reg	2, A
  set_reg	A, p1
  set_reg	3, A
  set_reg	A, p1
  .ret	"
`;

exports[`variable_scope.ts 1`] = `
"foo:
  .name	"foo"
  .pname	p1, "v"
  set_reg	p1, A
l0:
l1:
  compare_entity	:l5, A, p1
  jump	:l4
l5:
  notify	A
  set_reg	p1, A
  jump	:l4
l4:
l2:
  jump	:l0
l3:
  .ret	"
`;
